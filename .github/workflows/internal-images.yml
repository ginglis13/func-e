# yamllint --format github .github/workflows/internal-images.yml
---
name: internal-images

# Refresh the tags once a day. This limits impact of rate-limited images. See RATIONALE.md
on:
  schedule:
    - cron: "23 3 * * *"
  workflow_dispatch:  # Allows manual refresh

# This builds images and pushes them to ghcr.io/tetratelabs/func-e-internal:$tag
# Using these in tests and as a parent (FROM) avoids docker.io rate-limits particularly on pull requests.
#
# To troubleshoot, run locally with docker and install go directly. Ex:
# ```bash
# $ docker run --rm -it -v $PWD:/work --entrypoint /bin/bash ghcr.io/tetratelabs/func-e-internal:centos-8
# [root@d37da4601545 /]# cd /func-e
# now execute your setup commands!
# ```
jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    steps:
      # Same as doing this locally: echo "${GHCR_TOKEN}" | docker login ghcr.io -u "${GHCR_TOKEN}" --password-stdin
      - name: "Login into GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          # GHCR_TOKEN=<hex token value>
          #   - pushes Docker images to ghcr.io
          #   - create via https://github.com/settings/tokens
          #   - assign via https://github.com/organizations/tetratelabs/settings/secrets/actions
          #   - needs repo:status, public_repo, write:packages, delete:packages
          password: ${{ secrets.GHCR_TOKEN }}

      # We need QEMU and Buildx for multi-platform (amd64+arm64) image push.
      # Note: arm64 is run only by Travis. See RATIONALE.md
      - name: "Setup QEMU"
        uses: docker/setup-qemu-action@v1

      - name: "Setup Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Build and push"
        run: |  # TODO: parse the local env for the go versions
          for parent_image in ubuntu:$(lsb_release -sc) centos:8; do
            docker_tag=ghcr.io/${{ github.repository_owner }}/func-e-internal:${parent_image//:/-}
            # TODO: when done, add --push
            docker buildx build --load \
              --platform linux/amd64,linux/arm64 \
              --build-arg go_stable_release=1_17 \
              --build-arg go_stable_revision=1.17.1 \
              --build-arg go_prior_release=1_16 \
              --build-arg go_prior_revision=1.16.8 \
              --build-arg parent_image=${parent_image} \
              -t ${docker_tag} .github/workflows
          done
